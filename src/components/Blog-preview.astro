---
import '../styles/global.css';
const posts = Object.values(import.meta.glob('../pages/posts/*.md', { eager: true })).sort((a, b) => Date.parse(b.frontmatter.pubDate) - Date.parse(a.frontmatter.pubDate));
const { numOfPosts } = Astro.props;
---

<script define:vars={{ numOfPosts , posts}}>
    const numberOfPostsToDisplay = Number(numOfPosts)
    const page = 0;
    let lastPost = numberOfPostsToDisplay + (numberOfPostsToDisplay * page);

    if (lastPost > posts.length) {
        lastPost = posts.length
    }

    const firstPost = page * numberOfPostsToDisplay;
    
    for (const post of posts.slice(firstPost, lastPost)) {
        console.log("this is a test");
        const newDiv = document.createElement("div");


        const newAttribute = document.createElement("a");
        newAttribute.href = post.url;

        const newHeader = document.createElement("h3");
        newHeader.innerText=post.frontmatter.title;

        const newP = document.createElement("p");
        newP.innerText="Publish Date: " + post.frontmatter.pubDate;

        const newP2 = document.createElement("p");
        newP2.innerText=post.frontmatter.description;



        newAttribute.append(newHeader);
        newAttribute.append(newP);
        newAttribute.append(newP2);

        newDiv.append(newAttribute);

        document.body.insertBefore(newDiv, document.getElementById("demo"))
    }
</script>

<!-- TODO: Why is this rendering second? -->
<h3>Recent Blogs</h3>



<div id="demo"></div>

<!-- TODO: Have a parameter to limit the number of blog entries -->
<!-- {posts.map(post => 
    <div id="BlogItem">
        <a href={post.url} class="fill-div">
            <h3>{post.frontmatter.title}</h3>
            <p>Publish Date: {post.frontmatter.pubDate}</p>
            <p>{post.frontmatter.description}</p>
        </a>
        <hr/>
    </div>
)} -->

<!--

What did I learn:
1. The --- block is rendered server side, <script> is client side. 
2. I need to be VERY explicit with component names
3. I need to be careful about NOT being right next to parameter input. 

-->
