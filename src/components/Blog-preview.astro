---
import '../styles/global.css';
const posts = Object.values(import.meta.glob('../pages/posts/*.md', { eager: true })).sort((a, b) => Date.parse(b.frontmatter.pubDate) - Date.parse(a.frontmatter.pubDate));
const { numOfPosts } = Astro.props;
---


<h2>Recent Blogs</h2>

<div id="blog-entries"></div>

<div id="blogNavigation">
    <!-- <style scoped>
        @import url("https://cdnjs.cloudflare.com/ajax/libs/materialize/1.0.0/css/materialize.min.css");
    </style> -->

    <div id="currentListOfEntries"></div>
    <div id="nextBlogPage"><button id="nextBlogPageButton">Next Page</button></div>
    <div id="previousBlogPage" style="margin-right:4px;"><button id="previousBlogPageButton">Previous Page</button></div>

</div>

<div style="padding-bottom:100px;">

</div>

<!-- TODO: Refactor -->
<script define:vars={{ numOfPosts , posts}}>
    const currentPage = 0;
    let lastPostNumber = 0;
    let firstPostNumber = 0;

    // Determine the current listed page and display approriate blog entries based on the page
    function updateBlogListing(currentPage, showNextPage) {
        if (showNextPage) {
            currentPage += 1;
        } else {
            currentPage -= 1;
        }

        if(currentPage < 0) {
            currentPage = 0;
        }

        // Empties any blog entries currently written on the page
        document.getElementById("blog-entries").innerHTML = ""

        displayBlogEntries(currentPage)
    }

    function checkIfButtonsShouldBeModified(firstPostNumber, lastPostNumber, posts){
        if(lastPostNumber >= posts.length) {
            disableNextPageButton()
        } else {
            enableNextPageButton()
        }

        if(firstPostNumber == 0 ) {
            disablePreviousPageButton()
        } else {
            enablePreviousPageButton()
        }
    }

    function displayBlogEntries(currentPage) {
        const numberOfPostsToDisplay = Number(numOfPosts)


        firstPostNumber = currentPage * numberOfPostsToDisplay;
        lastPostNumber = numberOfPostsToDisplay + (numberOfPostsToDisplay * currentPage);

        if (lastPostNumber > posts.length) {
            lastPostNumber = posts.length
        }


        writeEntriesToPage(posts, firstPostNumber, lastPostNumber);
        document.getElementById("currentListOfEntries").innerText = (firstPostNumber+1) + " - " + lastPostNumber
        checkIfButtonsShouldBeModified(firstPostNumber, lastPostNumber, posts)
    }

    function disableNextPageButton() {
        document.getElementById("nextBlogPageButton").disabled = true;
    }

    function disablePreviousPageButton() {
        document.getElementById("previousBlogPageButton").disabled = true;
    }

    function enableNextPageButton() {
        document.getElementById("nextBlogPageButton").disabled = false;
    }

    function enablePreviousPageButton() {
        document.getElementById("previousBlogPageButton").disabled = false;
    }

    function writeEntriesToPage(posts, firstPostNumber, lastPostNumber) {
        let blogListingDiv = document.getElementById("blog-entries")

        for (const post of posts.slice(firstPostNumber, lastPostNumber)) {
            const blogPost = document.createElement("div");
            blogPost.id="blog-entry"

            const blogPostLink = document.createElement("a");
            blogPostLink.id = "blog-link"
            blogPostLink.href = post.url;

            const blogTitle = document.createElement("h3");
            blogTitle.innerText=post.frontmatter.title;

            const blogPublishDate = document.createElement("p");
            blogPublishDate.innerText="Publish Date: " + post.frontmatter.pubDate;

            const blogSummary = document.createElement("p");
            blogSummary.innerText=post.frontmatter.description;



            blogPostLink.append(blogTitle);
            blogPostLink.append(blogPublishDate);
            blogPostLink.append(blogSummary);

            blogPost.append(blogPostLink);
            // TODO: Make the hr outside of the blog post div
            blogPost.append(document.createElement("hr"));
            blogListingDiv.append(blogPost)
        }

        document.body.insertBefore(blogListingDiv, document.getElementById("blogNavigation"))
        // document.body.insertBefore(document.createElement("hr"),document.getElementById("blogNavigation"))
    }

    function onInitialPageLoad() {
        displayBlogEntries(0)

        if(lastPostNumber >= posts.length) {
            disableNextPageButton()
        }

        if(firstPostNumber == 0) {
            disablePreviousPageButton()
        }

        document.getElementById("nextBlogPageButton").addEventListener("click", () => updateBlogListing(currentPage, showNextPage=true));
        document.getElementById("previousBlogPageButton").addEventListener("click", () => updateBlogListing(currentPage, showNextPage=false));
    }

    onInitialPageLoad()
</script>


<!--

What did I learn:
1. The --- block is rendered server side, <script> is client side. 
2. I need to be VERY explicit with component names
3. I need to be careful about NOT being right next to parameter input. 
4. The position of an HTML element in reference to the script block matters if the script block is generating HTML.
-->
