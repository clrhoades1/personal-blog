---
import '../styles/global.css';
const posts = Object.values(import.meta.glob('../pages/posts/*.md', { eager: true })).sort((a, b) => Date.parse(b.frontmatter.pubDate) - Date.parse(a.frontmatter.pubDate));
const { numOfPosts } = Astro.props;
---


<h3>Recent Blogs</h3>

<div id="blogNavigation">
    
    <div id="currentListOfEntries"></div>
    <div id="nextBlogPage"><button id="nextBlogPageButton">Next Page</button></div>
</div>

<div style="padding-bottom:50px;">

</div>

<!-- TODO: Refactor -->
<script define:vars={{ numOfPosts , posts}}>
    const page = 0;

    function updateBlogListing(page) {
        page += 1;
        displayBlogEntries(page)

        // TODO: if on last page after the update, gray out the button
    }

    function displayBlogEntries(page) {
        const numberOfPostsToDisplay = Number(numOfPosts)
        let lastPost = numberOfPostsToDisplay + (numberOfPostsToDisplay * page);

        if (lastPost > posts.length) {
            lastPost = posts.length
        }
        const firstPost = page * numberOfPostsToDisplay;

        writeEntriesToPage(posts, firstPost, lastPost);

        document.getElementById("currentListOfEntries").innerText = firstPost + " - " + lastPost
    }

    function generateFirstPostNumber() {

    }

    function generateLastPostNumber() {

    }

    function writeEntriesToPage(posts, firstPost, lastPost) {
        for (const post of posts.slice(firstPost, lastPost)) {
            console.log("this is a test");
            const newDiv = document.createElement("div");


            const newAttribute = document.createElement("a");
            newAttribute.href = post.url;

            const newHeader = document.createElement("h3");
            newHeader.innerText=post.frontmatter.title;

            const newP = document.createElement("p");
            newP.innerText="Publish Date: " + post.frontmatter.pubDate;

            const newP2 = document.createElement("p");
            newP2.innerText=post.frontmatter.description;



            newAttribute.append(newHeader);
            newAttribute.append(newP);
            newAttribute.append(newP2);

            newDiv.append(newAttribute);
            newDiv.append(document.createElement("hr"));

            document.body.insertBefore(newDiv, document.getElementById("blogNavigation"))
        }
    }

    displayBlogEntries(0)

    document.getElementById("nextBlogPageButton").addEventListener("click", () => updateBlogListing(page));
</script>


<!--

What did I learn:
1. The --- block is rendered server side, <script> is client side. 
2. I need to be VERY explicit with component names
3. I need to be careful about NOT being right next to parameter input. 
4. The position of an HTML element in reference to the script block matters if the script block is generating HTML.
-->
